/**
 * This file was automatically generated by Stylus and represents a Rust program.
 * For more information, please see [The Stylus SDK](https://github.com/OffchainLabs/stylus-sdk-rs).
 */

// SPDX-License-Identifier: GPL-3.0-or-later
pragma solidity ^0.8.23;

interface IDonly  {
    function categoryCount() external view returns (uint256);

    function createCategory(string calldata name) external returns (uint256);

    function getCategoryNameHash(uint256 id) external view returns (uint256);

    function getCategoryCreator(uint256 id) external view returns (address);

    function getCategoryIsActive(uint256 id) external view returns (bool);

    function deactivateCategory(uint256 id) external;

    function campaignCount() external view returns (uint256);

    function createCampaign(uint256 category_id, string calldata title, string calldata description, address destination_wallet, uint256 max_sold_products) external returns (uint256);

    function getCampaignData(uint256 id) external view returns (uint256, address, bool, uint256, uint256, uint256, uint256, address);

    function deactivateCampaign(uint256 id) external;

    function productCount() external view returns (uint256);

    function addProduct(uint256 campaign_id, uint256 category_id, string calldata name, string calldata description, uint256 price) external returns (uint256);

    function getProductCampaignId(uint256 id) external view returns (uint256);

    function getProductPrice(uint256 id) external view returns (uint256);

    function getProductIsActive(uint256 id) external view returns (bool);

    function getProductIsSold(uint256 id) external view returns (bool);

    function purchaseProduct(uint256 product_id) external payable;

    function deactivateProduct(uint256 product_id) external;
}
